# minibatch related
batch-size: 1
maxlen-in: 1000  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 150

# optimization related
criterion: loss
early-stop-criterion: "validation/main/loss"
sortagrad: 0
opt: noam
epochs: 50
patience: 0
accum-grad: 4
grad-clip: 5.0
feedforwardGLU: False
# left_content: 80


# transformer related
transformer-lr: 1.0     #1.0
transformer-warmup-steps: 12000             #1000 #25000
transformer-attn-dropout-rate-encoder: 0.0 #0.4
transformer-attn-dropout-rate-decoder: 0.0 #0.1

# network architecture
## encoder related
etype: transformer
transformer-input-layer: conv2d
elayers: 6
eunits: 256
dropout-rate: 0.2 #0.4
## compressived related
chunk-window-size: 9
compressive_rate: 3
memspeech_size: 5 #10
conv1d2decoder: True
## decoder related
dtype: transformer
dlayers: 6
dec-embed-dim: 256
dunits: 256
dropout-rate-decoder: 0.3 #0.1
## attention related
adim: 256
aheads: 8
## joint network related
#joint-dim: 300

# transducer related
mtlalpha: 1.0 # mtlalpha should be set to 1.0 (CTC) to use transducer
rnnt-mode: 'rnnt' # switch to 'rnnt-att' to use transducer with attention
model-module: espnet.nets.pytorch_backend.e2e_asr_compressive_transducer:E2E
# model-module: espnet.nets.pytorch_backend.e2e_asr_transducer:E2E