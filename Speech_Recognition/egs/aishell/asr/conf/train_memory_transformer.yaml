# minibatch related
#batch-size: 40
#maxlen-in: 600  # if input length  > maxlen-in, batchsize is automatically reduced 1000 600
#maxlen-out: 150
batch-bins: 2500000 #5992000 #4500000    #5500000    #6200000 5992000
batch-count: bin
use-spkid: true

# optimization related
criterion: loss
early-stop-criterion: "validation/main/loss"
sortagrad: 0
opt: noam
epochs: 40
patience: 0
accum-grad: 4
grad-clip: 5.0
feedforwardGLU: true
# left-content: 80

#pretrain model
#load-pretrain:  /home/container_user/hang/espnet/egs/aishell/com_asr/exp/train_sp_pytorch_transformer256GLU1280FF/results/model.acc.best #/home/container_user/hang/espnet/egs/aishell/com_asr/exp/train_sp_pytorch_compressive_pretrain_256+CTC_fine_tine_.2_.2_.1_all_grad/results/model.loss.best #"/home/container_user/hang/espnet/egs/aishell/com_asr/exp/train_sp_pytorch_transformer256/results/model.loss.best"

# transformer related
transformer-lr: 1.0     #1.0
transformer-warmup-steps: 20000             #1000 #25000 12000
transformer-attn-dropout-rate-encoder: 0.3 #h0.2 #0.4
transformer-attn-dropout-rate-decoder: 0.2 #0.1

# network architecture
## encoder related
etype: transformer
transformer-input-layer: conv2d
elayers: 12 #h6 
eunits: 2560   #h1280 #256 
dropout-rate: 0.3 #h0.2 #0.4
## compressived related
chunk-window-size: 9  #9
compressive-rate: 3    #3
memspeech-size: 10 #h5 #10
memspeaker-size: 5
conv1d2decoder: true
speaker2decoder: false
memattnloss_decoder: false
usespk_version2: false
spkadim: 64
spkodim: 343
## decoder related
dtype: transformer
dlayers: 12 #h6
dec-embed-dim: 256
dunits: 2560  #h1280     #256
dropout-rate-decoder: 0.3 #0.1
## attention related
adim: 256
aheads: 8
## joint network related
#joint-dim: 300

# transducer related
mtlalpha: 1.0 # mtlalpha should be set to 1.0 (CTC) to use transducer
rnnt-mode: 'rnnt' # switch to 'rnnt-att' to use transducer with attention
model-module: espnet.nets.pytorch_backend.e2e_asr_compressive_transducer:E2E
# model-module: espnet.nets.pytorch_backend.e2e_asr_transducer:E2E