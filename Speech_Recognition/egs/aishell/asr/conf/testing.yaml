# minibatch related
batch-size: 20
maxlen-in: 1000  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 150

# optimization related
criterion: loss
early-stop-criterion: "validation/main/loss"
sortagrad: 0
opt: noam
epochs: 20
patience: 0
accum-grad: 1
grad-clip: 5.0

#pretrain model
load-pretrain: "/home/container_user/hang/espnet/egs/aishell/com_asr/exp/train_sp_pytorch_transformer/results/model.loss.best"
# transformer related
transformer-lr: 1
transformer-warmup-steps: 25000
transformer-attn-dropout-rate-encoder: 0.4 #0.4
transformer-attn-dropout-rate-decoder: 0.1 #0.1

# network architecture
## encoder related
etype: transformer
transformer-input-layer: conv2d
elayers: 6
eunits: 320
dropout-rate: 0.4 #0.4
## decoder related
dtype: transformer
dlayers: 6
dec-embed-dim: 300
dunits: 300
dropout-rate-decoder: 0.1 #0.1
## attention related
adim: 320
aheads: 4
## joint network related
#joint-dim: 300

# transducer related
mtlalpha: 1.0 # mtlalpha should be set to 1.0 (CTC) to use transducer
rnnt-mode: 'rnnt' # switch to 'rnnt-att' to use transducer with attention
model-module: espnet.nets.pytorch_backend.e2e_asr_sync_transducer:E2E
# model-module: espnet.nets.pytorch_backend.e2e_asr_transducer:E2E