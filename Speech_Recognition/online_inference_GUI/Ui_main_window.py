# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\i9904\Desktop\online_speech_py\main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QMenu, QVBoxLayout, QSizePolicy, QMessageBox, QWidget, QPushButton
import os, fnmatch
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure

import pyqtgraph as pg

import numpy as np

import random

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Online Speech Recognition")
        MainWindow.resize(900, 600)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget") 

        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBoxmodel = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxmodel.setFont(font)
        self.comboBoxmodel.setGeometry(QtCore.QRect(230, 10, 261, 50))
        self.comboBoxmodel.setObjectName("comboBoxmodel")

        self.mousecheckbox = QtWidgets.QCheckBox(self.centralwidget)
        self.mousecheckbox.setGeometry(QtCore.QRect(500, 30, 100, 20))
        self.mousecheckbox.setText("Mousemove")
        self.startcheckbox = QtWidgets.QCheckBox(self.centralwidget)
        self.startcheckbox.setGeometry(QtCore.QRect(600, 30, 100, 20))
        self.startcheckbox.setText("startLine")
        self.endcheckbox = QtWidgets.QCheckBox(self.centralwidget)
        self.endcheckbox.setGeometry(QtCore.QRect(700, 30, 100, 20))
        self.endcheckbox.setText("endLine")
        self.pgfigure = pg.PlotWidget(self.centralwidget)
        self.pgfigure.resize(800,250)
        self.pgfigure.move(50,60)
        self.pgfigure.setBackground('w')
        self.pgfigure.plotItem.setMouseEnabled(y=False)
        self.pgfigure.setYRange(-35000,35000)
        self.pgfigure.setXRange(0,32000)

        self.label_trans = QtWidgets.QLabel(self.centralwidget)
        self.label_trans.setGeometry(QtCore.QRect(50, 330, 800, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_trans.setFont(font)
        self.label_trans.setObjectName("label_trans")

        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBoxcmvn = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxcmvn.setFont(font)
        self.comboBoxcmvn.setGeometry(QtCore.QRect(50, 420, 230, 30))
        self.comboBoxcmvn.setObjectName("comboBoxcmvn")

        self.cmvntextedit = QtWidgets.QTextEdit(self.centralwidget)
        self.cmvntextedit.setFont(font)
        self.cmvntextedit.setGeometry(QtCore.QRect(50, 475, 100, 30))
        self.cmvntextedit.setObjectName("cmvntextedit")

        self.cmvnButton = QtWidgets.QPushButton(self.centralwidget)
        self.cmvnButton.setGeometry(QtCore.QRect(160, 475, 70, 30))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.cmvnButton.setFont(font)
        self.cmvnButton.setObjectName("cmvnButton")


        self.lcdNumbertime = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumbertime.setGeometry(QtCore.QRect(300, 410, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.lcdNumbertime.setFont(font)
        # self.lcdNumbertime.setSmallDecimalPoint(True)
        self.lcdNumbertime.setMode(QtWidgets.QLCDNumber.Dec)
        self.lcdNumbertime.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumbertime.setDigitCount(7)
        self.lcdNumbertime.setProperty("value", 0)
        self.lcdNumbertime.setObjectName("lcdNumbertime")

        # self.labeldone = QtWidgets.QLabel(self.centralwidget)
        # self.labeldone.setGeometry(QtCore.QRect(540, 420, 161, 16))
        # font = QtGui.QFont()
        # font.setPointSize(25)
        # self.labeldone.setFont(font)
        # self.labeldone.setText("")
        # self.labeldone.setAlignment(QtCore.Qt.AlignCenter)
        # self.labeldone.setObjectName("labeldone")

        self.startButton = QtWidgets.QPushButton(self.centralwidget)
        self.startButton.setGeometry(QtCore.QRect(320, 460, 121, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.startButton.setFont(font)
        self.startButton.setObjectName("startButton")
        # self.timeScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        # self.timeScrollBar.setGeometry(QtCore.QRect(50, 280, 661, 16))
        # self.timeScrollBar.setOrientation(QtCore.Qt.Horizontal)
        # self.timeScrollBar.setObjectName("timeScrollBar")
        # self.horizontalSliderzoom = QtWidgets.QSlider(self.centralwidget)
        # self.horizontalSliderzoom.setGeometry(QtCore.QRect(570, 340, 111, 22))
        # self.horizontalSliderzoom.setProperty("value", 50)
        # self.horizontalSliderzoom.setOrientation(QtCore.Qt.Horizontal)
        # self.horizontalSliderzoom.setObjectName("horizontalSliderzoom")
        # self.labelzoomphoto = QtWidgets.QLabel(self.centralwidget)
        # self.labelzoomphoto.setGeometry(QtCore.QRect(530, 330, 31, 31))
        # self.labelzoomphoto.setText("")
        # self.labelzoomphoto.setPixmap(QtGui.QPixmap("figure/zoom.png").scaled(31,31))
        # self.labelzoomphoto.setObjectName("labelzoomphoto")
        # self.savephButton = QtWidgets.QPushButton(self.centralwidget)
        # self.savephButton.setGeometry(QtCore.QRect(590, 460, 71, 31))
        # font = QtGui.QFont()
        # font.setPointSize(14)
        # self.savephButton.setFont(font)
        # self.savephButton.setObjectName("savephButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Online Speech Recognition"))
        self.startButton.setText(_translate("MainWindow", "START"))
        self.cmvnButton.setText(_translate("MainWindow", "Save"))
        self.label_trans.setText(_translate("MainWindow", ""))
        self.lcdNumbertime.display(_translate("MainWindow", "0:00:00")) 
        # self.savephButton.setText(_translate("MainWindow", "Savep"))
        model_path = self.find1('*.model','model/')
        self.comboBoxmodel.addItems(model_path)
        self.comboBoxmodel.setCurrentText(model_path[0])
        cmvn_path = self.find1('*.pickle','./')
        self.comboBoxcmvn.addItems(cmvn_path)
        self.comboBoxcmvn.setCurrentText(cmvn_path[0])

    def find1(self, pattern, path):
        result = []
        for root, dirs, files in os.walk(path):
            for name in files:
                if fnmatch.fnmatch(name, pattern):
                    result.append(os.path.join(path, name))
        return result



class mywindow(QtWidgets.QMainWindow, Ui_MainWindow):
    #__init__:解構函式，也就是類被建立後就會預先載入的專案。
    # 馬上執行，這個方法可以用來對你的物件做一些你希望的初始化。
    def __init__(self):
        #這裡需要過載一下mywindow，同時也包含了QtWidgets.QMainWindow的預載入項。
        super(mywindow, self).__init__()
        self.setupUi(self)

if __name__ == '__main__': #如果整個程式是主程式
    import sys
    app = QtWidgets.QApplication(sys.argv)
    #生成 mywindow 類的例項。
    window = mywindow()
    #有了例項，就得讓它顯示，show()是QWidget的方法，用於顯示視窗。
    window.show()
    # 呼叫sys庫的exit退出方法，條件是app.exec_()，也就是整個視窗關閉。
    # 有時候退出程式後，sys.exit(app.exec_())會報錯，改用app.exec_()就沒事
    # https://stackoverflow.com/questions/25719524/difference-between-sys-exitapp-exec-and-app-exec
    sys.exit(app.exec_())